<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.theantiquersroom.myapp.mapper.ProductMapper">

    <insert id="insertProduct"
            parameterType="com.theantiquersroom.myapp.domain.ProductFormDTO">

    <![CDATA[
            insert into product(name, content, category_id, user_id, started_at, ended_at, started_price, bid_increment, created_at, status)
            VALUES (#{name}, #{content}, #{categoryId}, #{userId}, #{startedAt}, #{endedAt}, #{startedPrice}, #{bidIncrement}, now(),"승인대기중")
        ]]>
        <selectKey resultType="int" keyProperty="pId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <delete id="deleteProductImage" parameterType="Integer">
        <![CDATA[
            delete from product_image
            where p_id = #{pId}
        ]]>
    </delete>

    <insert id="insertProductImage"
            parameterType="com.theantiquersroom.myapp.domain.ProductImageDTO">
    <![CDATA[
        insert into product_image(image_url, image_name, p_id)
        VALUES (#{imageUrl}, #{imageName}, #{pId})
        ]]>
    </insert>

    <select id="getDetailByPId"
            resultType="com.theantiquersroom.myapp.domain.ProductDTO">
        
        <![CDATA[ 
            SELECT 
                P.p_id as pId,
                P.name,
                P.created_at as createdAt,
                P.updated_at as updatedAt,
                P.content,
                P.category_id as categoryId,
                P.user_id as userId,
                P.started_at as startedAt,
                P.ended_at as endedAt,
                P.started_price as startedPrice,
                P.bid_increment as bidIncrement,
                P.status,
                (SELECT nickname 
                FROM users as U
                WHERE U.user_id=P.user_id) as nickname,
                (SELECT category_name
                FROM category as C
                WHERE C.category_id=P.category_id) as categoryName,
                TIMESTAMPDIFF(SECOND, NOW(), ended_at) as lefttime
            FROM product as P
            WHERE p_id=#{pId}
        ]]>
    </select>
  
    <select id="getProductImageUrls"
            resultType="string">
        
        <![CDATA[ 
            SELECT image_url
            FROM product_image
            WHERE p_id=#{pId}
        ]]>

    </select>

    <select id="listCriteria" 
            resultType="com.theantiquersroom.myapp.domain.ProductDTO" 
            parameterType="hashmap"> <!-- typeAlias를 지정했음으로 풀 네임 기재 필요 없음 -->
      
            SELECT
                p_id,
                name,
                created_at,
                updated_at,
                content,
                category_id,
                user_id,
                started_at,
                ended_at,
                started_price,
                bid_increment,
                status,
                TIMESTAMPDIFF(SECOND,NOW(),ended_at) AS lefttime
            FROM product

            <where>
                <if test="category_id != null and category_id != ''">
                    AND category_id = #{category_id}
                </if>

                <if test="searchQuery != null and searchQuery != ''">
                    AND name LIKE CONCAT('%',#{searchQuery},'%')
                </if>
            </where>

            <trim prefix="ORDER BY">

                <if test="filter == 0 or filter == null">  p_id DESC </if>

                <if test="filter == 1">  ended_at ASC </if>

                <if test="filter == 2">  started_price ASC </if>

                <if test="filter == 3">  started_price DESC </if>

            </trim>

            limit #{pageStart}, #{perPageNum}

    </select>

    <!-- 전체 게시글 수를 구하는 sql문 -->
    <select id="getTotalCount"
            resultType="java.lang.Integer"
            parameterType="com.theantiquersroom.myapp.domain.ProductCommand">

        SELECT count(*)
        FROM product
        <where>
            <if test="category_id != null and category_id != ''">
                AND category_id = #{category_id}
            </if>

            <if test="searchQuery != null and searchQuery != ''">
                AND name LIKE CONCAT('%',#{searchQuery},'%')
            </if>
        </where>
	</select>

    <!-- 가장 높은 Bid값을 구하는 sql문 -->
    <select id="getMaxBid" resultType="Integer" parameterType="Integer">

        SELECT bid_price
        FROM bid_history
        WHERE p_id = #{pId}
        ORDER BY bid_price DESC
        LIMIT 1

    </select>

    <select id="getBidHistory" resultType="com.theantiquersroom.myapp.domain.BidHistoryDTO" parameterType="Integer">

        SELECT B.bid_at,
               B.user_id,
               B.bid_price,
               B.p_id,
               (SELECT nickname
                FROM users as U
                WHERE B.user_id=U.user_id) as nickname
        FROM bid_history as B
        WHERE p_id=#{pId}
        ORDER BY bid_at DESC


    </select>

    <!-- insert to bid_history -->
    <insert id="insertBid" parameterType="com.theantiquersroom.myapp.domain.BidHistoryDTO">

        INSERT
        INTO bid_history
        (bid_at,user_id, bid_price, p_id)
        VALUES (NOW(),#{userId},#{bidPrice},#{pId})

    </insert>

    <!-- 상품삭제 -->
    <delete id="deleteProduct">
        DELETE FROM product WHERE p_id=#{pId}
    </delete>

    <!--    수정할 상품 정보 불러오기-->
    <select id="getupdateByPId"
            resultType="com.theantiquersroom.myapp.domain.ProductModifyDTO">

        SELECT
            product.p_id as pId,
            product.name,
            product.content,
            product.category_id,
            product.started_at,
            product.ended_at,
            product.started_price,
            product.bid_increment,
            category.category_name
            FROM product
            join category
            on product.category_id = category.category_id
            where p_id=#{pId}
        </select>

    <!--    수정할 상품 이미지 정보 불러오기-->
    <select id="getProductImage"
            resultType="com.theantiquersroom.myapp.domain.ProductImageDTO">

        SELECT
            image_url,
            image_name
        FROM product_image
        where p_id=#{pId}
    </select>

    <!--    상품 정보 수정-->
    <update id="updateProduct" parameterType="com.theantiquersroom.myapp.domain.ProductFormDTO">
        <![CDATA[
        update product set
                           name=#{name},
                           content=#{content},
                           category_id=#{categoryId},
                           started_at=#{startedAt},
                           ended_at=#{endedAt},
                           started_price=#{startedPrice},
                           bid_increment=#{bidIncrement},
                           status="승인대기중"
--                            ,
--                             updated_at = new()
        where p_id=#{pId};
        ]]>
    </update>

</mapper>