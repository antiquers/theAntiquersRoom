<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.theantiquersroom.myapp.mapper.BoardMapper">

    <!-- 문의게시판 목록 조회 -->
    <select
        id="getQnAListByProductId"
        resultType="com.theantiquersroom.myapp.domain.QnADTO">

        <![CDATA[
            SELECT
				bindex,
				created_at as createdAt,
				updated_at as updatedAt,
				title,
				content,
				ref,
				depth,
				step,
				author,
				p_id as pid

            FROM board
            WHERE p_id = #{pid}
			ORDER BY ref DESC, step ASC

        ]]>
    </select>

    <!-- 문의게시글 등록 -->
    <insert
    		 id="registerQnA"
    		 parameterType="com.theantiquersroom.myapp.domain.QnADTO">

    	<selectKey resultType="int" keyProperty="ref" order="BEFORE">
    		SELECT IFNULL(MAX(ref),0) + 1
    		FROM board
    	</selectKey>

        <![CDATA[
            INSERT INTO board
            (
				bindex,
				created_at,
				updated_at,
				title,
				content,
				ref,
				author,
				p_id

            )
            VALUES
            (
               #{bindex},
                now(),
             	now(),
                #{title},
                #{content},
                #{ref},
                #{author},
                #{pid}

            )
        ]]>
    </insert>

    <!-- 문의게시물 목록(페이징) -->
    <select id="getQnAListPaging" resultType="com.theantiquersroom.myapp.domain.QnADTO">

                SELECT bindex, content, author, p_id as pid, title, ref, depth, step, created_at as createdAt, updated_at as updatedAt
                FROM board ORDER BY ref DESC, step ASC
        <!-- limit ((${pageNum}-1)*${amount}), ${amount} -->
        limit #{skip},#{amount}

    </select>

    <!-- 문의게시물 총 갯수 -->
    <select id="getQnATotal" resultType="int">

        SELECT count(*) FROM board

    </select>

    <!-- 문의게시물 조회 -->
    <select id="getQnADetail" resultType="com.theantiquersroom.myapp.domain.QnADTO">

        SELECT * FROM board WHERE bindex = #{bindex}

    </select>

     <!-- 문의게시글 수정 -->
    <update id="modifyQnA" >

		UPDATE board SET title=#{title}, content=#{content}, updated_at = now() WHERE bindex = #{bindex}

    </update>

     <!-- 문의게시글 삭제 -->
    <delete id="removeQnA">

        DELETE FROM board WHERE bindex = #{bindex}

    </delete>

	<!-- 게시글 답글을 등록하는 쿼리 -->
	<insert id="registerReQnA" parameterType="com.theantiquersroom.myapp.domain.QnADTO">

		INSERT INTO board
		(created_at, updated_at, title, content,ref, depth, step, author, p_id)
		VALUES
		(now(), now(), #{title},#{content},#{ref},1,(SELECT count(*) FROM board AS B WHERE B.ref = #{ref}),#{author},#{pid});

	</insert>

	<!-- ====================== 리뷰게시판 ====================== -->

    <!-- 리뷰게시판 목록 조회 -->
    <select
        id="getReviewList"
        resultType="com.theantiquersroom.myapp.domain.ReviewDTO">

        <![CDATA[

			 SELECT

			    review_id as reviewId,
			    created_at as createdAt,
			    updated_at as updatedAt,
			    content,
			    p_id as pid,
			    score,
			    author,
			    seller_id as sellerId,
			    (select image_url from product_image as D where D.p_id=R.p_id order by D.index limit 1) as imageUrl
			
			FROM review as R
			WHERE R.seller_Id = (SELECT user_id FROM product WHERE p_id = #{pid})
			ORDER BY created_at DESC
        ]]>
    </select>

    <!-- 리뷰게시글 등록 -->
    <insert
    		 id="registerReview"
    		 parameterType="com.theantiquersroom.myapp.domain.ReviewDTO">

        <![CDATA[
            INSERT INTO review
            (
				created_at,
				updated_at,
				content,
				p_id,
				score,
				author,
				seller_id
            )
            VALUES
            (
                now(),
             	now(),
                #{content},
                #{pid},
                #{score},
                #{author},
                #{sellerId}
            )
        ]]>
    </insert>

    <!-- 리뷰게시글 목록(페이징) -->
    <select id="getReviewListPaging" resultType="com.theantiquersroom.myapp.domain.ReviewDTO" parameterType="hashmap">

			 SELECT

			    review_id as reviewId,
			    created_at as createdAt,
			    updated_at as updatedAt,
			    content,
			    p_id as pid,
			    score,
			    author,
			    seller_id as sellerId,
			    (select image_url from product_image as D where D.p_id=R.p_id order by D.index limit 1) as imageUrl
			
			FROM review as R
			WHERE R.seller_Id = (SELECT user_id FROM product WHERE p_id = #{pid})
			ORDER BY created_at DESC
			
    </select>

    <!-- 리뷰게시글 총 갯수 -->
    <select id="getReviewTotal" resultType="int">

        SELECT count(*) FROM review

    </select>

    <!-- 리뷰게시글 조회 -->
    <select id="getReviewDetail" resultType="com.theantiquersroom.myapp.domain.ReviewDTO">

        SELECT * FROM review WHERE review_id = #{reviewId}

    </select>

     <!-- 리뷰게시글 수정 -->
    <update id="modifyReview" >

		UPDATE review SET score=#{score}, content=#{content}, updated_at = now() WHERE review_id = #{reviewId}

    </update>

     <!-- 리뷰게시글 삭제 -->
    <delete id="removeReview">

        DELETE FROM review WHERE review_id = #{revieId}

    </delete>

</mapper>
